# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-04-14 04:56
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccessPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_point_name', models.CharField(max_length=60)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('modified_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=40)),
                ('last_name', models.CharField(max_length=40)),
                ('middle_initial', models.CharField(max_length=1)),
                ('utln', models.CharField(max_length=10, unique=True)),
                ('student_type', models.CharField(max_length=20)),
                ('jumbocash_id', models.IntegerField()),
                ('birth_date', models.DateField()),
                ('school', models.CharField(max_length=30)),
                ('class_year', models.IntegerField()),
                ('barcode', models.IntegerField()),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('modified_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain_name', models.CharField(max_length=60, unique=True)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('modified_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='EditedCard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=40)),
                ('last_name', models.CharField(max_length=40)),
                ('middle_initial', models.CharField(max_length=1)),
                ('utln', models.CharField(max_length=10)),
                ('student_type', models.CharField(max_length=20)),
                ('jumbocash_id', models.IntegerField()),
                ('birth_date', models.DateField()),
                ('school', models.CharField(max_length=30)),
                ('class_year', models.IntegerField()),
                ('barcode', models.IntegerField()),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('modified_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='Request',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_level', models.IntegerField()),
                ('status', models.IntegerField()),
                ('reason', models.CharField(max_length=200, null=True)),
                ('feedback', models.CharField(max_length=200, null=True)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('modified_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zipcode', models.CharField(max_length=10)),
                ('address', models.CharField(max_length=60)),
                ('city', models.CharField(max_length=60)),
                ('state', models.CharField(max_length=60)),
                ('country', models.CharField(max_length=60)),
                ('resource_name', models.CharField(max_length=60)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('modified_at', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=40)),
                ('last_name', models.CharField(max_length=40)),
                ('utln', models.CharField(max_length=10, unique=True)),
                ('created_at', models.DateTimeField(default=datetime.datetime.now, editable=False)),
                ('modified_at', models.DateTimeField(default=datetime.datetime.now)),
                ('manager_level', models.IntegerField(default=0)),
                ('access_points', models.ManyToManyField(related_name='useraccount_access_points', to='cardcontrol.AccessPoint')),
                ('access_points_managed', models.ManyToManyField(related_name='useraccount_access_points_managed', to='cardcontrol.AccessPoint')),
                ('card', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cardcontrol.Card')),
            ],
        ),
        migrations.AddField(
            model_name='resource',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_created_by', to='cardcontrol.UserAccount'),
        ),
        migrations.AddField(
            model_name='resource',
            name='modified_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_modified_by', to='cardcontrol.UserAccount'),
        ),
        migrations.AddField(
            model_name='resource',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_parent', to='cardcontrol.Domain'),
        ),
        migrations.AddField(
            model_name='request',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_created_by', to='cardcontrol.UserAccount'),
        ),
        migrations.AddField(
            model_name='request',
            name='cur_card',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='request_cur_card', to='cardcontrol.EditedCard'),
        ),
        migrations.AddField(
            model_name='request',
            name='granted_access_points',
            field=models.ManyToManyField(blank=True, related_name='request_granted_access_points', to='cardcontrol.AccessPoint'),
        ),
        migrations.AddField(
            model_name='request',
            name='modified_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_modified_by', to='cardcontrol.UserAccount'),
        ),
        migrations.AddField(
            model_name='request',
            name='new_access_points',
            field=models.ManyToManyField(blank=True, related_name='request_new_access_points', to='cardcontrol.AccessPoint'),
        ),
        migrations.AddField(
            model_name='request',
            name='new_card',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='request_new_card', to='cardcontrol.EditedCard'),
        ),
        migrations.AddField(
            model_name='request',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cardcontrol.UserAccount'),
        ),
        migrations.AlterUniqueTogether(
            name='editedcard',
            unique_together=set([('first_name', 'last_name', 'middle_initial', 'utln', 'student_type', 'jumbocash_id', 'birth_date', 'school', 'class_year', 'barcode')]),
        ),
        migrations.AddField(
            model_name='domain',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domain_created_by', to='cardcontrol.UserAccount'),
        ),
        migrations.AddField(
            model_name='domain',
            name='modified_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domain_modified_by', to='cardcontrol.UserAccount'),
        ),
        migrations.AddField(
            model_name='domain',
            name='parent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='domain_parent', to='cardcontrol.Domain'),
        ),
        migrations.AlterUniqueTogether(
            name='card',
            unique_together=set([('first_name', 'last_name', 'middle_initial', 'utln', 'student_type', 'jumbocash_id', 'birth_date', 'school', 'class_year', 'barcode')]),
        ),
        migrations.AddField(
            model_name='accesspoint',
            name='created_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accesspoint_created_by', to='cardcontrol.UserAccount'),
        ),
        migrations.AddField(
            model_name='accesspoint',
            name='modified_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accesspoint_modified_by', to='cardcontrol.UserAccount'),
        ),
        migrations.AddField(
            model_name='accesspoint',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accesspoint_parent', to='cardcontrol.Resource'),
        ),
        migrations.AlterUniqueTogether(
            name='resource',
            unique_together=set([('zipcode', 'address', 'city', 'resource_name')]),
        ),
    ]
